@import url(./landing.css);

//
//  MEDIA QUERIES
//––––––––––––––––––––––––––––––––––––––––––––––––––

// A map of breakpoints.
$breakpoints: (
  xs: 576px,
  sm: 768px,
  md: 992px,
  lg: 1200px
);


//
//  RESPOND ABOVE
//––––––––––––––––––––––––––––––––––––––––––––––––––

// @include respond-above(sm) {}
@mixin respond-above($breakpoint) {

  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {

    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    // Write the media query.
    @media (min-width: $breakpoint-value) {
      @content;
    }
  
  // If the breakpoint doesn't exist in the map.
  } @else {

    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}


//
//  RESPOND BELOW
//––––––––––––––––––––––––––––––––––––––––––––––––––

// @include respond-below(sm) {}
@mixin respond-below($breakpoint) {

  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {

    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    // Write the media query.
    @media (max-width: ($breakpoint-value - 1)) {
      @content;
    }
  
  // If the breakpoint doesn't exist in the map.
  } @else {

    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}





//
//  RESPOND BETWEEN
//––––––––––––––––––––––––––––––––––––––––––––––––––

// @include respond-between(sm, md) {}
@mixin respond-between($lower, $upper) {

  // If both the lower and upper breakpoints exist in the map.
  @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {

    // Get the lower and upper breakpoints.
    $lower-breakpoint: map-get($breakpoints, $lower);
    $upper-breakpoint: map-get($breakpoints, $upper);

    // Write the media query.
    @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {
      @content;
    }
  
  // If one or both of the breakpoints don't exist.
  } @else {

    // If lower breakpoint is invalid.
    @if (map-has-key($breakpoints, $lower) == false) {

      // Log a warning.
      @warn 'Your lower breakpoint was invalid: #{$lower}.';
    }

    // If upper breakpoint is invalid.
    @if (map-has-key($breakpoints, $upper) == false) {

      // Log a warning.
      @warn 'Your upper breakpoint was invalid: #{$upper}.';
    }
  }
}
@include respond-between(xs,sm ) {

  /* Header*/
  .overlay h1{
    display: block;
    text-align: center;
    font-size: 100px;
   
  }

  .overlay p{
    display: flex;
    font-size: 90px;
    text-align: center;
  }

  .overlay h2{
    font-size: 100px;
    display: flex;
    text-align: center;
  }

  .main { 
    height: 100%;
    display: block;
    width: auto;
    background-image: url(../images/LAND.png);
  }
   /*end of header*/

   /*about*/

   .Container-fluid img {
    width: 150px ;
    height: 150px;
   }

  .Container-fluid {
    height: 100%;
  }

  .Container-fluid h1{
    font-size: 50px;
  }

  .Container-fluid p {
    font-size: 20px;
  }

  .explore {
   
    width: 150px;
    height: 50px;
    margin-bottom: 10px;

  }
  /* end of about*/

  /*Schedule*/

 

  .schedule {
    display: flex;
    margin-bottom: 50px;
   
  }

  .schedule h1 {
    font-size: 50px;
    
  }

  /*End of schedule*/


  /*Teams*/

 
  
  .team h1 {
    margin-bottom: 30px;
    justify-content: center;

  }

  .flex-container img {
    margin-right: 2px ;
    height: 220px;
    width: 220px;
    

  }

  /*End of teams*/

  /*partners*/


  /*footer*/
  footer .row {
    display: flex;
    flex-direction: column;
    padding: 30px 40px;
  }

  footer .footer col ul {
    margin-left: 30px;
    margin-bottom:  30px;

  }

  .footer col input {
    width: 100%;
  }



  

 

}